name: Rollback Production
on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "ROLLBACK" to confirm'
        required: true
        type: string

jobs:
  rollback:
    if: github.event.inputs.confirmation == 'ROLLBACK'
    runs-on: ubuntu-latest
    name: Rollback to Previous Version
    environment:
      name: production
      url: https://budget.jaredcarrano.com
    
    steps:
      - name: Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirmation }}" != "ROLLBACK" ]; then
            echo "❌ Confirmation text does not match. Aborting rollback."
            exit 1
          fi
          echo "✅ Confirmation validated. Proceeding with rollback..."
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Execute rollback via SSM
        run: |
          echo "🔄 Starting rollback process..."
          
          # Execute rollback script on server
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=['sudo -u appuser /home/appuser/rollback.sh']" \
            --output text \
            --query "Command.CommandId")
          
          echo "Command ID: $COMMAND_ID"
          
          # Wait for rollback
          echo "Waiting for rollback to complete..."
          aws ssm wait command-executed \
            --command-id "$COMMAND_ID" \
            --instance-id "${{ secrets.EC2_INSTANCE_ID }}" || true
          
          # Get status
          STATUS=$(aws ssm get-command-invocation \
            --command-id "$COMMAND_ID" \
            --instance-id "${{ secrets.EC2_INSTANCE_ID }}" \
            --query "Status" \
            --output text)
          
          echo "Rollback status: $STATUS"
          
          # Show output
          echo "=== Rollback Output ==="
          aws ssm get-command-invocation \
            --command-id "$COMMAND_ID" \
            --instance-id "${{ secrets.EC2_INSTANCE_ID }}" \
            --query "StandardOutputContent" \
            --output text
          
          if [ "$STATUS" != "Success" ]; then
            echo "=== Error Output ==="
            aws ssm get-command-invocation \
              --command-id "$COMMAND_ID" \
              --instance-id "${{ secrets.EC2_INSTANCE_ID }}" \
              --query "StandardErrorContent" \
              --output text
            echo "❌ Rollback failed! Manual intervention may be required."
            exit 1
          fi
          
      - name: Verify rollback
        run: |
          echo "🔍 Verifying rollback..."
          
          # Check health endpoint
          for i in {1..5}; do
            if curl -s https://budget.jaredcarrano.com/health | grep -q "ok"; then
              echo "✅ Application is healthy after rollback!"
              exit 0
            fi
            echo "Retry $i/5..."
            sleep 3
          done
          
          echo "⚠️  Health check failed, but rollback process completed"
          
      - name: Summary
        if: success()
        run: |
          echo "### ⏪ Rollback Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Initiated by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time:** $(date -u +%Y-%m-%d' '%H:%M:%S' UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** Previous version restored" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Note:** The failed deployment has been saved on the server for investigation." >> $GITHUB_STEP_SUMMARY